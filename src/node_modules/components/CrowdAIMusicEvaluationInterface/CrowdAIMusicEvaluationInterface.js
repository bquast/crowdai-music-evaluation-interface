import React, { Component } from 'react';
import PianoComponent from '../PianoComponent/PianoComponent.js';
import MidiPlayerComponent from '../MidiPlayerComponent/MidiPlayerComponent.js';
import './CrowdAIMusicEvaluationInterface.css';
import { Row, Col } from 'react-simple-flex-grid';
import "react-simple-flex-grid/lib/main.css";
import ReactHintFactory from 'react-hint'
import 'react-hint/css/index.css'
import axios from 'axios';

const ReactHint = ReactHintFactory(React)
class CrowdAIMusicEvaluationInterface extends Component {
  constructor(props){
    super(props);

    this.state = {
    }
    this.octave = 2;
    this.max_number_of_piano_keys = 80;

    this.resetKeyBoard = this.resetKeyBoard.bind(this);
    this.reloadData = this.reloadData.bind(this);
    this.heartClicked = this.heartClicked.bind(this);
    this.resetKeyBoard();
    this.reloadData();
  }
  heartClicked(id){
    console.log("HEART CLICKED : ", id);
    var THIS = this;
    axios.post(this.props.base_api_url+"/match/"+this.state.match_id, {
      winner: id
    }).then(function(response){
      console.log(response);
      if(response.status == 200){
        THIS.reloadData();
        console.log(response)
      }else{
        // TODO : Add error handling
      }
    }).catch(function(error){
      console.log(error);
    })
  }
  reloadData(){
    var THIS = this;
    var _state = this.state;
    _state.song1 = false;
    _state.song2 = false;
    axios.get(this.props.base_api_url+"/match")
          .then(function(response){
            _state.match_id = response.data.match_id

            var candidate_1 = response.data.candidate_1;
            axios.get(candidate_1)
                 .then(function(response){
                   THIS.refs.midiplayer0.load_data_uri(response.data.dataUri);
                 })
            var candidate_2 = response.data.candidate_2;
            axios.get(candidate_2)
                .then(function(response){
                  THIS.refs.midiplayer1.load_data_uri(response.data.dataUri);
                })

          })
          .catch(function(error){
            console.log(error);
          })
  }
  resetKeyBoard(){
    for(var i = 0; i<this.max_number_of_piano_keys; i++){
      this.state["key_"+i] = 0;
    }
    this.setState(this.state);
  }
  OnNoteOn(noteNumber){
    if(noteNumber > this.octave*2 + this.max_number_of_piano_keys){
      return;
    }
    let key = "key_"+ (noteNumber - this.octave*12);
    this.state[key] = 1;
    this.setState(this.state);
  }
  OnNoteOff(noteNumber){
    if(noteNumber > this.octave*2 + this.max_number_of_piano_keys){
      return;
    }
    let key = "key_"+(noteNumber - this.octave*12)
    this.state[key] = 0;
    this.setState(this.state);
  }
  render() {
    return (
      <div>
        <ReactHint events delay={100} />
        <Row className="CrowdAIMusicEvaluationInterfaceWrapper" justify="left">
          <Col span={10} offset={1}>
            <Row gutter={10} align="middle" justify="center">
              <Col xs={11} sm={6} md={6} lg={6} xl={6}>
                <MidiPlayerComponent ref="midiplayer0" playerName={0} dataUri={this.props.song1} onNoteOn={this.OnNoteOn.bind(this)} onNoteOff={this.OnNoteOff.bind(this)} onHeartClicked={this.heartClicked} resetKeyBoard={this.resetKeyBoard}/>
              </Col>
              <Col xs={11} sm={6} md={6} lg={6} xl={6}>
                <MidiPlayerComponent ref="midiplayer1" playerName={1} dataUri={this.props.song1} onNoteOn={this.OnNoteOn.bind(this)} onNoteOff={this.OnNoteOff.bind(this)} onHeartClicked={this.heartClicked} resetKeyBoard={this.resetKeyBoard}/>
              </Col>
            </Row>
            <Row align="middle" justify="center">
              <Col span={12}>
                <PianoComponent key_states={this.state} noFloor />
              </Col>
            </Row>
          </Col>
        </Row>
      </div>
    );
  }
}
CrowdAIMusicEvaluationInterface.defaultProps = {
 song1: "data:audio/midi;base64,TVRoZAAAAAYAAQACAQBNVHJrAAAAGgD/WAQEAhgIAP9ZAv8AAP9YBAMCGAgB/y8ATVRyawAAAagAsFsyALAKSQCwWzIAsApJALAAAACwIAAAwAAAkDxGgS2QPAATkDxIOpA8AAaQPlMAkDVJAJA5SIFnkD4AGZA8SIFnkDwAGZBBVYFOkDUAAJA5ABmQQQAZkEBPAJAwUQCQOlGDTpBAADKQPEeBLZA8ABOQPEgOkDAAAJA6ACyQPAAGkD5VAJAwUACQOk+BZ5A+ABmQPEWBZ5A8ABmQQ1qBTpAwAACQOgAZkEMAGZBBSwCQNUkAkDlJg06QQQAykDxFgS2QPAATkDxKDpA1AACQOQAskDwABpBIYwCQNU0AkDlPgWeQSAAZkEVKgWeQRQAZkEFCgU6QNQAAkDkAGZBBABmQQEkAkDVRAJA6VIFnkEAAGZA+RYFH/1EDOThwIJA+AAD/UQMJJ8AZkEZZgS2QRgAB/1EDOThwEpBGTg6QNQAAkDoAAP9RAwknwCyQRgAGkEVMAJA1SwCQOUuBZ5BFABmQQUGBTpA1AACQOQAZkEEAGZBDTQCQME4AkDpPgWeQQwAAkDAAAJA6ABmQQUkAkDVMAJA5TIVOkEEAAJA1AACQOQAB/y8A",
  base_api_url: "http://localhost:9271",
}

export default CrowdAIMusicEvaluationInterface;
